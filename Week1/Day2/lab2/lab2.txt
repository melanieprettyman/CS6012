LAB-02
1. On your computer, how many times per second does the millisecond timer update?
Time advanced roughly 1004.0 times per second.


2. Is it possible to determine how many times per second the nanosecond timer updates? If so, how many? If not, why not?
It is possible to determine the frequency of nanosecond timer updates by calculating the average time between updates. This can be done by measuring the total elapsed time and dividing it by the number of updates.




3. Judging by experiment 4, how long does it appear to take to compute System.nanoTime()?
In experiment 4, the time advanced by System.nanoTime() varied between 41 nanoseconds and 959 nanoseconds. This indicates that the time taken to compute System.nanoTime() is not constant and can vary depending on various factors such as system load, hardware capabilities, and other concurrent processes running on the system.


4. Estimate the precision of your answer above (+/- how many nanoseconds?)
It is evident that the precision of the answer is within a range of +/- 40 nanosecond. This can be inferred from the consistent pattern of time advancements, where the majority of the values are within a close range of nanoseconds.


5. How long does it take to compute the square root of the numbers 1 through 10?
It takes an average of 58.0 nanoseconds to compute the square roots of the  numbers 1..10.


6. Estimate the precision of your answer above (+/- how many nanoseconds?)
The time advanced varied between 58 nanoseconds and 65 nanoseconds so it is evident that the precision of the answer is within a range of +/- 7 nanosecond. 


7. If you repeat the square root test 100x as many times, does the precision improve?
No the precision does not change too much the more after 100x repeats. It would improve accuracy but not precision. 


8. How could you improve the results (get a more accurate estimate of elapsed time)?
        Running the test 100x times and throwing out any outlier data points to improve the results.